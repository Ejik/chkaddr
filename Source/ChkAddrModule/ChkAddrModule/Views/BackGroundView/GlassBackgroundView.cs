//----------------------------------------------------------------------------------------
// patterns & practices - Smart Client Software Factory - Guidance Package
//
// This file was generated by the "Add View" recipe.
//
// This class is the concrete implementation of a View in the Model-View-Presenter 
// pattern. Communication between the Presenter and this class is acheived through 
// an interface to facilitate separation and testability.
// Note that the Presenter generated by the same recipe, will automatically be created
// by CAB through [CreateNew] and bidirectional references will be added.
//
// For more information see:
// ms-help://MS.VSCC.v80/MS.VSIPCC.v80/ms.practices.scsf.2007may/SCSF/html/02-09-010-ModelViewPresenter_MVP.htm
//
// Latest version of this Guidance Package: http://go.microsoft.com/fwlink/?LinkId=62182
//----------------------------------------------------------------------------------------

using System;
using System.Windows.Forms;
using ACOT.Infrastructure.Interface.Constants;
using Microsoft.Practices.CompositeUI.SmartParts;
using Microsoft.Practices.ObjectBuilder;
using ACOT.Infrastructure.Interface;

namespace ACOT.ChkAddrModule.Views.BackGroundView
{
    public partial class GlassBackgroundView : UserControl, ISmartPartInfoProvider
    {
        public GlassBackgroundView()
        {
            InitializeComponent();
            Dock = DockStyle.Fill;
        }

        #region GetSmartPartInfo Members
        public ISmartPartInfo GetSmartPartInfo(Type smartPartInfoType)
        {
            ISmartPartInfo spi;
            if (smartPartInfoType.IsAssignableFrom(typeof(WindowSmartPartInfo)))
            {
                WindowSmartPartInfo LayoutView = new WindowSmartPartInfo();
                LayoutView.ControlBox = false;

                LayoutView.Keys[WindowWorkspaceSetting.FormBorderStyle] = FormBorderStyle.None;
                LayoutView.Keys[WindowWorkspaceSetting.WindowState] = FormWindowState.Maximized;
                LayoutView.Keys[WindowWorkspaceSetting.FormShowIcon] = false;
                //LayoutView.Keys[WindowWorkspaceSetting.AutoSize] = true;
                LayoutView.Keys[WindowWorkspaceSetting.FormShowInTaskbar] = false;
                spi = LayoutView;
            }
            else
            {
                spi = Activator.CreateInstance(smartPartInfoType) as ISmartPartInfo;
            }

            //spi.Description = Properties.Resources.FindCustomerResultsViewDescription;
            //spi.Title = "Адресный классификатор";

            return spi;
        }
        #endregion 

        protected override void OnLoad(EventArgs e)
        {
            _presenter.OnViewReady();
            base.OnLoad(e);
        }
    }
}

